//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("baxtech_clinicModel", "FK_Bed_BedType", "BedType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConsoleApplication1.BedType), "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConsoleApplication1.Bed), true)]
[assembly: EdmRelationshipAttribute("baxtech_clinicModel", "FK_Visit_Bed", "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ConsoleApplication1.Bed), "Visit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConsoleApplication1.Visit), true)]
[assembly: EdmRelationshipAttribute("baxtech_clinicModel", "FK_Visit_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConsoleApplication1.Doctor), "Visit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConsoleApplication1.Visit), true)]
[assembly: EdmRelationshipAttribute("baxtech_clinicModel", "FK_Visit_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConsoleApplication1.Patient), "Visit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConsoleApplication1.Visit), true)]
[assembly: EdmRelationshipAttribute("baxtech_clinicModel", "FK_Visit_VisitDetails", "VisitDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ConsoleApplication1.VisitDetail), "Visit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConsoleApplication1.Visit), true)]

#endregion

namespace ConsoleApplication1
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class baxtech_clinicEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new baxtech_clinicEntities object using the connection string found in the 'baxtech_clinicEntities' section of the application configuration file.
        /// </summary>
        public baxtech_clinicEntities() : base("name=baxtech_clinicEntities", "baxtech_clinicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new baxtech_clinicEntities object.
        /// </summary>
        public baxtech_clinicEntities(string connectionString) : base(connectionString, "baxtech_clinicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new baxtech_clinicEntities object.
        /// </summary>
        public baxtech_clinicEntities(EntityConnection connection) : base(connection, "baxtech_clinicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bed> Beds
        {
            get
            {
                if ((_Beds == null))
                {
                    _Beds = base.CreateObjectSet<Bed>("Beds");
                }
                return _Beds;
            }
        }
        private ObjectSet<Bed> _Beds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BedType> BedTypes
        {
            get
            {
                if ((_BedTypes == null))
                {
                    _BedTypes = base.CreateObjectSet<BedType>("BedTypes");
                }
                return _BedTypes;
            }
        }
        private ObjectSet<BedType> _BedTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Visit> Visits
        {
            get
            {
                if ((_Visits == null))
                {
                    _Visits = base.CreateObjectSet<Visit>("Visits");
                }
                return _Visits;
            }
        }
        private ObjectSet<Visit> _Visits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VisitDetail> VisitDetails
        {
            get
            {
                if ((_VisitDetails == null))
                {
                    _VisitDetails = base.CreateObjectSet<VisitDetail>("VisitDetails");
                }
                return _VisitDetails;
            }
        }
        private ObjectSet<VisitDetail> _VisitDetails;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Beds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBeds(Bed bed)
        {
            base.AddObject("Beds", bed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BedTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBedTypes(BedType bedType)
        {
            base.AddObject("BedTypes", bedType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Visits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVisits(Visit visit)
        {
            base.AddObject("Visits", visit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VisitDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVisitDetails(VisitDetail visitDetail)
        {
            base.AddObject("VisitDetails", visitDetail);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="baxtech_clinicModel", Name="Bed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="bedName">Initial value of the BedName property.</param>
        /// <param name="ratePerDay">Initial value of the RatePerDay property.</param>
        /// <param name="bedTypeId">Initial value of the BedTypeId property.</param>
        public static Bed CreateBed(global::System.Int32 id, global::System.String bedName, global::System.Decimal ratePerDay, global::System.Int32 bedTypeId)
        {
            Bed bed = new Bed();
            bed.Id = id;
            bed.BedName = bedName;
            bed.RatePerDay = ratePerDay;
            bed.BedTypeId = bedTypeId;
            return bed;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BedName
        {
            get
            {
                return _BedName;
            }
            set
            {
                OnBedNameChanging(value);
                ReportPropertyChanging("BedName");
                _BedName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BedName");
                OnBedNameChanged();
            }
        }
        private global::System.String _BedName;
        partial void OnBedNameChanging(global::System.String value);
        partial void OnBedNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RatePerDay
        {
            get
            {
                return _RatePerDay;
            }
            set
            {
                OnRatePerDayChanging(value);
                ReportPropertyChanging("RatePerDay");
                _RatePerDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RatePerDay");
                OnRatePerDayChanged();
            }
        }
        private global::System.Decimal _RatePerDay;
        partial void OnRatePerDayChanging(global::System.Decimal value);
        partial void OnRatePerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BedTypeId
        {
            get
            {
                return _BedTypeId;
            }
            set
            {
                OnBedTypeIdChanging(value);
                ReportPropertyChanging("BedTypeId");
                _BedTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BedTypeId");
                OnBedTypeIdChanged();
            }
        }
        private global::System.Int32 _BedTypeId;
        partial void OnBedTypeIdChanging(global::System.Int32 value);
        partial void OnBedTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Bed_BedType", "BedType")]
        public BedType BedType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedType>("baxtech_clinicModel.FK_Bed_BedType", "BedType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedType>("baxtech_clinicModel.FK_Bed_BedType", "BedType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BedType> BedTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedType>("baxtech_clinicModel.FK_Bed_BedType", "BedType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BedType>("baxtech_clinicModel.FK_Bed_BedType", "BedType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Visit_Bed", "Visit")]
        public EntityCollection<Visit> Visits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Visit>("baxtech_clinicModel.FK_Visit_Bed", "Visit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Visit>("baxtech_clinicModel.FK_Visit_Bed", "Visit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="baxtech_clinicModel", Name="BedType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BedType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BedType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static BedType CreateBedType(global::System.Int32 id, global::System.String description)
        {
            BedType bedType = new BedType();
            bedType.Id = id;
            bedType.Description = description;
            return bedType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Bed_BedType", "Bed")]
        public EntityCollection<Bed> Beds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bed>("baxtech_clinicModel.FK_Bed_BedType", "Bed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bed>("baxtech_clinicModel.FK_Bed_BedType", "Bed", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="baxtech_clinicModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Doctor CreateDoctor(global::System.Int32 id, global::System.String name, global::System.String address, global::System.String phone)
        {
            Doctor doctor = new Doctor();
            doctor.Id = id;
            doctor.Name = name;
            doctor.Address = address;
            doctor.Phone = phone;
            return doctor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Visit_Doctor", "Visit")]
        public EntityCollection<Visit> Visits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Visit>("baxtech_clinicModel.FK_Visit_Doctor", "Visit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Visit>("baxtech_clinicModel.FK_Visit_Doctor", "Visit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="baxtech_clinicModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="emergencyContact">Initial value of the EmergencyContact property.</param>
        /// <param name="dateOfRegistration">Initial value of the DateOfRegistration property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.String name, global::System.String address, global::System.DateTime dateOfBirth, global::System.String phone, global::System.String emergencyContact, global::System.DateTime dateOfRegistration)
        {
            Patient patient = new Patient();
            patient.Id = id;
            patient.Name = name;
            patient.Address = address;
            patient.DateOfBirth = dateOfBirth;
            patient.Phone = phone;
            patient.EmergencyContact = emergencyContact;
            patient.DateOfRegistration = dateOfRegistration;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmergencyContact
        {
            get
            {
                return _EmergencyContact;
            }
            set
            {
                OnEmergencyContactChanging(value);
                ReportPropertyChanging("EmergencyContact");
                _EmergencyContact = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmergencyContact");
                OnEmergencyContactChanged();
            }
        }
        private global::System.String _EmergencyContact;
        partial void OnEmergencyContactChanging(global::System.String value);
        partial void OnEmergencyContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfRegistration
        {
            get
            {
                return _DateOfRegistration;
            }
            set
            {
                OnDateOfRegistrationChanging(value);
                ReportPropertyChanging("DateOfRegistration");
                _DateOfRegistration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfRegistration");
                OnDateOfRegistrationChanged();
            }
        }
        private global::System.DateTime _DateOfRegistration;
        partial void OnDateOfRegistrationChanging(global::System.DateTime value);
        partial void OnDateOfRegistrationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Visit_Patient", "Visit")]
        public EntityCollection<Visit> Visits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Visit>("baxtech_clinicModel.FK_Visit_Patient", "Visit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Visit>("baxtech_clinicModel.FK_Visit_Patient", "Visit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="baxtech_clinicModel", Name="Visit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Visit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Visit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="dateOfVisit">Initial value of the DateOfVisit property.</param>
        public static Visit CreateVisit(global::System.Int32 id, global::System.Int32 doctorId, global::System.Int32 patientId, global::System.DateTime dateOfVisit)
        {
            Visit visit = new Visit();
            visit.Id = id;
            visit.DoctorId = doctorId;
            visit.PatientId = patientId;
            visit.DateOfVisit = dateOfVisit;
            return visit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfVisit
        {
            get
            {
                return _DateOfVisit;
            }
            set
            {
                OnDateOfVisitChanging(value);
                ReportPropertyChanging("DateOfVisit");
                _DateOfVisit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfVisit");
                OnDateOfVisitChanged();
            }
        }
        private global::System.DateTime _DateOfVisit;
        partial void OnDateOfVisitChanging(global::System.DateTime value);
        partial void OnDateOfVisitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BedId
        {
            get
            {
                return _BedId;
            }
            set
            {
                OnBedIdChanging(value);
                ReportPropertyChanging("BedId");
                _BedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BedId");
                OnBedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BedId;
        partial void OnBedIdChanging(Nullable<global::System.Int32> value);
        partial void OnBedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfDischarge
        {
            get
            {
                return _DateOfDischarge;
            }
            set
            {
                OnDateOfDischargeChanging(value);
                ReportPropertyChanging("DateOfDischarge");
                _DateOfDischarge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfDischarge");
                OnDateOfDischargeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfDischarge;
        partial void OnDateOfDischargeChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfDischargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DetailsId
        {
            get
            {
                return _DetailsId;
            }
            set
            {
                OnDetailsIdChanging(value);
                ReportPropertyChanging("DetailsId");
                _DetailsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DetailsId");
                OnDetailsIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DetailsId;
        partial void OnDetailsIdChanging(Nullable<global::System.Int32> value);
        partial void OnDetailsIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Visit_Bed", "Bed")]
        public Bed Bed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("baxtech_clinicModel.FK_Visit_Bed", "Bed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("baxtech_clinicModel.FK_Visit_Bed", "Bed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bed> BedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("baxtech_clinicModel.FK_Visit_Bed", "Bed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bed>("baxtech_clinicModel.FK_Visit_Bed", "Bed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Visit_Doctor", "Doctor")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("baxtech_clinicModel.FK_Visit_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("baxtech_clinicModel.FK_Visit_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("baxtech_clinicModel.FK_Visit_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("baxtech_clinicModel.FK_Visit_Doctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Visit_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("baxtech_clinicModel.FK_Visit_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("baxtech_clinicModel.FK_Visit_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("baxtech_clinicModel.FK_Visit_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("baxtech_clinicModel.FK_Visit_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Visit_VisitDetails", "VisitDetail")]
        public VisitDetail VisitDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisitDetail>("baxtech_clinicModel.FK_Visit_VisitDetails", "VisitDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisitDetail>("baxtech_clinicModel.FK_Visit_VisitDetails", "VisitDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VisitDetail> VisitDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisitDetail>("baxtech_clinicModel.FK_Visit_VisitDetails", "VisitDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VisitDetail>("baxtech_clinicModel.FK_Visit_VisitDetails", "VisitDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="baxtech_clinicModel", Name="VisitDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VisitDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VisitDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="symptoms">Initial value of the Symptoms property.</param>
        /// <param name="disease">Initial value of the Disease property.</param>
        /// <param name="treatment">Initial value of the Treatment property.</param>
        public static VisitDetail CreateVisitDetail(global::System.Int32 id, global::System.String symptoms, global::System.String disease, global::System.String treatment)
        {
            VisitDetail visitDetail = new VisitDetail();
            visitDetail.Id = id;
            visitDetail.Symptoms = symptoms;
            visitDetail.Disease = disease;
            visitDetail.Treatment = treatment;
            return visitDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symptoms
        {
            get
            {
                return _Symptoms;
            }
            set
            {
                OnSymptomsChanging(value);
                ReportPropertyChanging("Symptoms");
                _Symptoms = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symptoms");
                OnSymptomsChanged();
            }
        }
        private global::System.String _Symptoms;
        partial void OnSymptomsChanging(global::System.String value);
        partial void OnSymptomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Disease
        {
            get
            {
                return _Disease;
            }
            set
            {
                OnDiseaseChanging(value);
                ReportPropertyChanging("Disease");
                _Disease = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Disease");
                OnDiseaseChanged();
            }
        }
        private global::System.String _Disease;
        partial void OnDiseaseChanging(global::System.String value);
        partial void OnDiseaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Treatment
        {
            get
            {
                return _Treatment;
            }
            set
            {
                OnTreatmentChanging(value);
                ReportPropertyChanging("Treatment");
                _Treatment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Treatment");
                OnTreatmentChanged();
            }
        }
        private global::System.String _Treatment;
        partial void OnTreatmentChanging(global::System.String value);
        partial void OnTreatmentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("baxtech_clinicModel", "FK_Visit_VisitDetails", "Visit")]
        public EntityCollection<Visit> Visits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Visit>("baxtech_clinicModel.FK_Visit_VisitDetails", "Visit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Visit>("baxtech_clinicModel.FK_Visit_VisitDetails", "Visit", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
